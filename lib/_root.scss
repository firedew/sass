@use "sass:meta";
@import "./lib/variables";
@import "./lib/colors";
@import "./lib/functions";

:root {
  // Note: Custom variable values only support SassScript inside `#{}`.

  // Colors
  // Generate palettes for full colors, grays, and theme colors.

  @each $color, $value in $colors {
    --fd-#{$color}: #{$value};
  }

  @each $color, $value in $grays {
    --fd-gray-#{$color}: #{$value};
  }

  @each $color, $value in $theme-colors {
    --fd-#{$color}: #{$value};
  }

  // @each $color, $value in $theme-colors-rgb {
  //  --fd-#{$color}-rgb: #{$value};
  // }

  --fd-white-rgb: #{to-rgb($white)};
  --fd-black-rgb: #{to-rgb($black)};
  --fd-body-color-rgb: #{to-rgb($body-color)};
  --fd-body-bg-rgb: #{to-rgb($body-bg)};

  // Fonts

  // Note: Use `inspect` for lists so that quoted items keep the quotes.
  // See https://github.com/sass/sass/issues/2383#issuecomment-336349172
  --fd-font-sans-serif: #{meta.inspect($font-family-sans-serif)};
  --fd-font-monospace: #{meta.inspect($font-family-monospace)};
  --fd-gradient: #{$gradient};

  // Root and body
  // stylelint-disable custom-property-empty-line-before
  // scss-docs-start root-body-variables
  @if $font-size-root {
    --fd-root-font-size: #{$font-size-root};
  }
  --fd-body-font-family: #{$font-family-base};

  // @include rfs($font-size-base, --fd-body-font-size);
  --fd-body-font-weight: #{$font-weight-base};
  --fd-body-line-height: #{$line-height-base};
  --fd-body-color: #{$body-color};

  @if $body-text-align {
    --fd-body-text-align: #{$body-text-align};
  }
  --fd-body-bg: #{$body-bg};

  // scss-docs-end root-body-variables
  // stylelint-enable custom-property-empty-line-before
}
